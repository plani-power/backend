<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.plani.back.mapper.PlanMapper">
    <select id="planList" resultType="Map">
        SELECT PLAN_ID,
               PLAN_NAME,
               CREATED_USER,
               ONOFF_TYPE,
               HASHTAG,
               CREATE_PLAN_DATE,
               UPDATE_PLAN_DATE,
               IS_PUBLIC,
               STATUS,
               DEFAULT_TIME,
               START_DATE,
               END_DATE,
               MAX_MEMBER_NUM,
               GENDER,
               BIRTH_YEAR
        FROM PLAN_INFO
        WHERE IS_DELETED = FALSE
    </select>

    <insert id="createPlan" parameterType="Map">
        INSERT INTO PLAN_INFO (PLAN_NAME, CREATED_USER, ONOFF_TYPE, HASHTAG, CREATE_PLAN_DATE, IS_PUBLIC, STATUS, DEFAULT_START_TIME, DEFAULT_END_TIME, START_DATE, END_DATE, MAX_MEMBER_NUM, GENDER, BIRTH_YEAR, IS_DELETED, PLAN_PWD, REGION, REGION_PART, KEYWORD, INTRO)
        VALUES (#{plan_name}, #{created_user}, #{onoff_type}, #{hashtag}, now(), #{is_public},
                'PLAN002', STR_TO_DATE(#{default_start_time}, '%H%i%s'), STR_TO_DATE(#{default_end_time}, '%H%i%s'), STR_TO_DATE(#{start_date}, '%Y%m%d%H%i%s'), STR_TO_DATE(#{end_date}, '%Y%m%d%H%i%s'),
                #{max_member_num}, #{gender}, #{birth_year}, 0, #{plan_pwd}, #{region}, #{region_part}, #{keyword}, #{intro})
        <selectKey resultType="int" keyProperty="PLAN_ID" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <insert id="planLeader" parameterType="Map">
        INSERT INTO TBL_PLAN_MEMBER (USER_ID, PLAN_ID, ROLE_TYPE, JOIN_DATE) VALUES (#{user_id}, #{plan_id}, #{role_type}, now());
    </insert>

    <select id="planDetail" resultType="Map">
        SELECT PLAN_ID,
               PLAN_NAME,
               CREATED_USER,
               ONOFF_TYPE,
               HASHTAG,
               CREATE_PLAN_DATE,
               UPDATE_PLAN_DATE,
               IS_PUBLIC,
               STATUS,
               DEFAULT_START_TIME,
               DEFAULT_END_TIME,
               START_DATE,
               END_DATE,
               MAX_MEMBER_NUM,
               GENDER,
               BIRTH_YEAR,
               PLAN_PWD,
               REGION,
               REGION_PART,
               VIEWS,
               KEYWORD,
               INTRO
        FROM PLAN_INFO
        WHERE PLAN_ID = #{plan_id}
    </select>

    <update id="updatePlan" parameterType="Map">
        UPDATE PLAN_INFO
        SET PLAN_NAME = #{plan_name}, ONOFF_TYPE = #{onoff_type}, HASHTAG = #{hashtag}, UPDATE_PLAN_DATE = now(), IS_PUBLIC = #{is_public}, STATUS = #{status},
            DEFAULT_TIME = #{default_time}, START_DATE = STR_TO_DATE(#{start_date}, '%Y%m%d%H%i%s'), END_DATE = STR_TO_DATE(#{end_date}, '%Y%m%d%H%i%s'),
            MAX_MEMBER_NUM = #{max_member_num}, GENDER = #{gender}, BIRTH_YEAR = #{birth_year}
        WHERE PLAN_ID = #{plan_id}
    </update>

    <delete id="deletePlan" parameterType="int">
        UPDATE PLAN_INFO
        SET IS_DELETED = TRUE, DELETED_DATE = NOW()
        WHERE PLAN_ID = #{plan_id}
    </delete>

    <select id="planApplicant" parameterType="int" resultType="Map">
        SELECT A.PLAN_NAME, C.USER_ID, C.USER_NICKNAME, B.STATUS, B.JOIN_DATE
        FROM PLAN_INFO A JOIN TBL_PLAN_JOIN_MEMBER B
          ON A.PLAN_ID = B.PLAN_ID
        JOIN TBL_USER C
          ON B.USER_ID = C.USER_ID
        WHERE A.PLAN_ID = #{plan_id}
          AND A.STATUS = '모집중'
    </select>

    <select id="planMember" parameterType="int" resultType="Map">
        SELECT B.USER_ID, C.USER_NICKNAME
        FROM PLAN_INFO A JOIN TBL_PLAN_MEMBER B
          ON A.PLAN_ID = B.PLAN_ID
        JOIN TBL_USER C
          ON B.USER_ID = C.USER_ID
        WHERE A.PLAN_ID = #{plan_id}
    </select>

    <!--플랜 상세조회 > 적극왕 조회 -->
    <select id="joinKing" parameterType="int" resultType="Map">
        SELECT A.USER_ID
             ,A.USER_NICKNAME
             ,SUM(A.ATTENDANCE) AS ATTENDANCE
             ,RANK() OVER (ORDER BY SUM(A.ATTENDANCE) DESC) AS RANKING
        FROM
            (
                SELECT T1.USER_ID
                     , T3.USER_NICKNAME
                     ,IFNULL(T2.IS_ATTENDANCE,0) AS ATTENDANCE
                FROM TBL_PLAN_MEMBER T1
                         LEFT OUTER JOIN TBL_SCHEDULE_JOIN_MEMBER T2 ON T1.USER_ID = T2.MEMBER_ID AND T1.PLAN_ID = T2.PLAN_ID
                         LEFT OUTER JOIN TBL_USER T3 ON T3.USER_ID = T1.USER_ID
                WHERE T1.PLAN_ID = #{planId}
            ) A
        GROUP BY A.USER_ID,A.USER_NICKNAME
    </select>

    <!--플랜 참여 신청 -->
    <select id="joinPlanList" resultType="Map">
        SELECT plan_id ,gender ,birth_year
        FROM PLAN_INFO
        WHERE plan_id = #{planId}
    </select>

    <select id="joinUserList" resultType="Map">
        SELECT user_gender,user_birth_year
        FROM TBL_USER
        WHERE USER_ID = #{userId}
    </select>

    <select id="planJoinUserList" resultType="Map">
        SELECT id,plan_id,user_id,join_date
        FROM TBL_PLAN_JOIN_MEMBER
        WHERE PLAN_ID = #{planId}
          AND USER_ID =  #{userId}
    </select>

    <insert id="createjoinUser" parameterType="java.util.HashMap">
        INSERT INTO TBL_PLAN_JOIN_MEMBER
            (
                PLAN_ID,
                USER_ID,
                JOIN_DATE,
                ROLE_TYPE
            )
            VALUES
        (
            #{planId},
            #{userId},
            now(),
            'ROLE002'
            )
    </insert>
</mapper>